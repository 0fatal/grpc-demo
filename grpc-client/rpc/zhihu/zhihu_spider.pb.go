// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: zhihu_spider.proto

package zhihu

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ZhiHuSpiderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ZhiHuSpiderReq) Reset() {
	*x = ZhiHuSpiderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zhihu_spider_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZhiHuSpiderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZhiHuSpiderReq) ProtoMessage() {}

func (x *ZhiHuSpiderReq) ProtoReflect() protoreflect.Message {
	mi := &file_zhihu_spider_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZhiHuSpiderReq.ProtoReflect.Descriptor instead.
func (*ZhiHuSpiderReq) Descriptor() ([]byte, []int) {
	return file_zhihu_spider_proto_rawDescGZIP(), []int{0}
}

type ZhiHuSpiderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ZhiHuSpiderItem `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ZhiHuSpiderResp) Reset() {
	*x = ZhiHuSpiderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zhihu_spider_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZhiHuSpiderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZhiHuSpiderResp) ProtoMessage() {}

func (x *ZhiHuSpiderResp) ProtoReflect() protoreflect.Message {
	mi := &file_zhihu_spider_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZhiHuSpiderResp.ProtoReflect.Descriptor instead.
func (*ZhiHuSpiderResp) Descriptor() ([]byte, []int) {
	return file_zhihu_spider_proto_rawDescGZIP(), []int{1}
}

func (x *ZhiHuSpiderResp) GetData() []*ZhiHuSpiderItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type ZhiHuSpiderItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title         string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Url           string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Created       uint64 `protobuf:"varint,3,opt,name=created,proto3" json:"created,omitempty"`
	AnswerCount   uint32 `protobuf:"varint,4,opt,name=answer_count,json=answerCount,proto3" json:"answer_count,omitempty"`
	FollowerCount uint32 `protobuf:"varint,5,opt,name=follower_count,json=followerCount,proto3" json:"follower_count,omitempty"`
	CommentCount  uint32 `protobuf:"varint,6,opt,name=comment_count,json=commentCount,proto3" json:"comment_count,omitempty"`
	Brief         string `protobuf:"bytes,7,opt,name=brief,proto3" json:"brief,omitempty"`
	Thumbnail     string `protobuf:"bytes,8,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	Detail        string `protobuf:"bytes,9,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *ZhiHuSpiderItem) Reset() {
	*x = ZhiHuSpiderItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zhihu_spider_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZhiHuSpiderItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZhiHuSpiderItem) ProtoMessage() {}

func (x *ZhiHuSpiderItem) ProtoReflect() protoreflect.Message {
	mi := &file_zhihu_spider_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZhiHuSpiderItem.ProtoReflect.Descriptor instead.
func (*ZhiHuSpiderItem) Descriptor() ([]byte, []int) {
	return file_zhihu_spider_proto_rawDescGZIP(), []int{2}
}

func (x *ZhiHuSpiderItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ZhiHuSpiderItem) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ZhiHuSpiderItem) GetCreated() uint64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *ZhiHuSpiderItem) GetAnswerCount() uint32 {
	if x != nil {
		return x.AnswerCount
	}
	return 0
}

func (x *ZhiHuSpiderItem) GetFollowerCount() uint32 {
	if x != nil {
		return x.FollowerCount
	}
	return 0
}

func (x *ZhiHuSpiderItem) GetCommentCount() uint32 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *ZhiHuSpiderItem) GetBrief() string {
	if x != nil {
		return x.Brief
	}
	return ""
}

func (x *ZhiHuSpiderItem) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *ZhiHuSpiderItem) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

var File_zhihu_spider_proto protoreflect.FileDescriptor

var file_zhihu_spider_proto_rawDesc = []byte{
	0x0a, 0x12, 0x7a, 0x68, 0x69, 0x68, 0x75, 0x5f, 0x73, 0x70, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x7a, 0x68, 0x69, 0x68, 0x75, 0x22, 0x10, 0x0a, 0x0e, 0x5a,
	0x68, 0x69, 0x48, 0x75, 0x53, 0x70, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x22, 0x3d, 0x0a,
	0x0f, 0x5a, 0x68, 0x69, 0x48, 0x75, 0x53, 0x70, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x7a, 0x68, 0x69, 0x68, 0x75, 0x2e, 0x5a, 0x68, 0x69, 0x48, 0x75, 0x53, 0x70, 0x69, 0x64,
	0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8e, 0x02, 0x0a,
	0x0f, 0x5a, 0x68, 0x69, 0x48, 0x75, 0x53, 0x70, 0x69, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x69, 0x65, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x62, 0x72, 0x69, 0x65, 0x66, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62,
	0x6e, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x32, 0x4a, 0x0a,
	0x0b, 0x5a, 0x68, 0x69, 0x48, 0x75, 0x53, 0x70, 0x69, 0x64, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x08,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x48, 0x6f, 0x74, 0x12, 0x15, 0x2e, 0x7a, 0x68, 0x69, 0x68, 0x75,
	0x2e, 0x5a, 0x68, 0x69, 0x48, 0x75, 0x53, 0x70, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x7a, 0x68, 0x69, 0x68, 0x75, 0x2e, 0x5a, 0x68, 0x69, 0x48, 0x75, 0x53, 0x70, 0x69,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_zhihu_spider_proto_rawDescOnce sync.Once
	file_zhihu_spider_proto_rawDescData = file_zhihu_spider_proto_rawDesc
)

func file_zhihu_spider_proto_rawDescGZIP() []byte {
	file_zhihu_spider_proto_rawDescOnce.Do(func() {
		file_zhihu_spider_proto_rawDescData = protoimpl.X.CompressGZIP(file_zhihu_spider_proto_rawDescData)
	})
	return file_zhihu_spider_proto_rawDescData
}

var file_zhihu_spider_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_zhihu_spider_proto_goTypes = []interface{}{
	(*ZhiHuSpiderReq)(nil),  // 0: zhihu.ZhiHuSpiderReq
	(*ZhiHuSpiderResp)(nil), // 1: zhihu.ZhiHuSpiderResp
	(*ZhiHuSpiderItem)(nil), // 2: zhihu.ZhiHuSpiderItem
}
var file_zhihu_spider_proto_depIdxs = []int32{
	2, // 0: zhihu.ZhiHuSpiderResp.data:type_name -> zhihu.ZhiHuSpiderItem
	0, // 1: zhihu.ZhiHuSpider.FetchHot:input_type -> zhihu.ZhiHuSpiderReq
	1, // 2: zhihu.ZhiHuSpider.FetchHot:output_type -> zhihu.ZhiHuSpiderResp
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_zhihu_spider_proto_init() }
func file_zhihu_spider_proto_init() {
	if File_zhihu_spider_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_zhihu_spider_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZhiHuSpiderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zhihu_spider_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZhiHuSpiderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zhihu_spider_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZhiHuSpiderItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zhihu_spider_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_zhihu_spider_proto_goTypes,
		DependencyIndexes: file_zhihu_spider_proto_depIdxs,
		MessageInfos:      file_zhihu_spider_proto_msgTypes,
	}.Build()
	File_zhihu_spider_proto = out.File
	file_zhihu_spider_proto_rawDesc = nil
	file_zhihu_spider_proto_goTypes = nil
	file_zhihu_spider_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ZhiHuSpiderClient is the client API for ZhiHuSpider service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ZhiHuSpiderClient interface {
	FetchHot(ctx context.Context, in *ZhiHuSpiderReq, opts ...grpc.CallOption) (*ZhiHuSpiderResp, error)
}

type zhiHuSpiderClient struct {
	cc grpc.ClientConnInterface
}

func NewZhiHuSpiderClient(cc grpc.ClientConnInterface) ZhiHuSpiderClient {
	return &zhiHuSpiderClient{cc}
}

func (c *zhiHuSpiderClient) FetchHot(ctx context.Context, in *ZhiHuSpiderReq, opts ...grpc.CallOption) (*ZhiHuSpiderResp, error) {
	out := new(ZhiHuSpiderResp)
	err := c.cc.Invoke(ctx, "/zhihu.ZhiHuSpider/FetchHot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ZhiHuSpiderServer is the server API for ZhiHuSpider service.
type ZhiHuSpiderServer interface {
	FetchHot(context.Context, *ZhiHuSpiderReq) (*ZhiHuSpiderResp, error)
}

// UnimplementedZhiHuSpiderServer can be embedded to have forward compatible implementations.
type UnimplementedZhiHuSpiderServer struct {
}

func (*UnimplementedZhiHuSpiderServer) FetchHot(context.Context, *ZhiHuSpiderReq) (*ZhiHuSpiderResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchHot not implemented")
}

func RegisterZhiHuSpiderServer(s *grpc.Server, srv ZhiHuSpiderServer) {
	s.RegisterService(&_ZhiHuSpider_serviceDesc, srv)
}

func _ZhiHuSpider_FetchHot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ZhiHuSpiderReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZhiHuSpiderServer).FetchHot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zhihu.ZhiHuSpider/FetchHot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZhiHuSpiderServer).FetchHot(ctx, req.(*ZhiHuSpiderReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ZhiHuSpider_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zhihu.ZhiHuSpider",
	HandlerType: (*ZhiHuSpiderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FetchHot",
			Handler:    _ZhiHuSpider_FetchHot_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "zhihu_spider.proto",
}
